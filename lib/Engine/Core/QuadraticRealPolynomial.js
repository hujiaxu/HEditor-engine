import HEditorMath from './Math';
export const addWithCancellationCheck = (left, right, tolerance) => {
    const difference = left + right;
    if (HEditorMath.sign(left) !== HEditorMath.sign(right) &&
        Math.abs(difference / Math.max(Math.abs(left), Math.abs(right))) < tolerance) {
        return 0.0;
    }
    return difference;
};
export default class QuadraticRealPolynomial {
    static computeRealRoots;
}
QuadraticRealPolynomial.computeRealRoots = (a, b, c) => {
    if (typeof a !== 'number') {
        throw new Error('a must be a number');
    }
    if (typeof b !== 'number') {
        throw new Error('b must be a number');
    }
    if (typeof c !== 'number') {
        throw new Error('c must be a number');
    }
    let ratio;
    if (a === 0.0) {
        if (b === 0.0) {
            return [];
        }
        return [-c / b];
    }
    else if (b === 0.0) {
        if (c === 0.0) {
            return [0.0, 0.0];
        }
        const cMagnitude = Math.abs(c);
        const aMagnitude = Math.abs(a);
        if (cMagnitude < aMagnitude &&
            cMagnitude / aMagnitude < HEditorMath.EPSILON14) {
            return [0.0, 0.0];
        }
        else if (cMagnitude > aMagnitude &&
            aMagnitude / cMagnitude < HEditorMath.EPSILON14) {
            return [];
        }
        ratio = -c / a;
        if (ratio < 0.0) {
            return [];
        }
        const root = Math.sqrt(ratio);
        return [-root, root];
    }
    else if (c === 0.0) {
        ratio = -b / a;
        if (ratio < 0.0) {
            return [ratio, 0.0];
        }
        return [0.0, ratio];
    }
    // a * x^2 + b * x + c = 0
    const b2 = b * b;
    const four_ac = 4.0 * a * c;
    const radicand = addWithCancellationCheck(b2, -four_ac, HEditorMath.EPSILON14);
    if (radicand < 0.0) {
        return [];
    }
    const q = -0.5 *
        addWithCancellationCheck(b, HEditorMath.sign(b) * Math.sqrt(radicand), HEditorMath.EPSILON14);
    if (b > 0.0) {
        return [q / a, c / q];
    }
    return [c / q, q / a];
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUXVhZHJhdGljUmVhbFBvbHlub21pYWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvRW5naW5lL0NvcmUvUXVhZHJhdGljUmVhbFBvbHlub21pYWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxXQUFXLE1BQU0sUUFBUSxDQUFBO0FBRWhDLE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUFHLENBQ3RDLElBQVksRUFDWixLQUFhLEVBQ2IsU0FBaUIsRUFDakIsRUFBRTtJQUNGLE1BQU0sVUFBVSxHQUFHLElBQUksR0FBRyxLQUFLLENBQUE7SUFDL0IsSUFDRSxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ2xELElBQUksQ0FBQyxHQUFHLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxTQUFTLEVBQzVFLENBQUM7UUFDRCxPQUFPLEdBQUcsQ0FBQTtJQUNaLENBQUM7SUFFRCxPQUFPLFVBQVUsQ0FBQTtBQUNuQixDQUFDLENBQUE7QUFDRCxNQUFNLENBQUMsT0FBTyxPQUFPLHVCQUF1QjtJQUMxQyxNQUFNLENBQUMsZ0JBQWdCLENBSUU7Q0FDMUI7QUFFRCx1QkFBdUIsQ0FBQyxnQkFBZ0IsR0FBRyxDQUN6QyxDQUFTLEVBQ1QsQ0FBUyxFQUNULENBQVMsRUFDVCxFQUFFO0lBQ0YsSUFBSSxPQUFPLENBQUMsS0FBSyxRQUFRLEVBQUUsQ0FBQztRQUMxQixNQUFNLElBQUksS0FBSyxDQUFDLG9CQUFvQixDQUFDLENBQUE7SUFDdkMsQ0FBQztJQUVELElBQUksT0FBTyxDQUFDLEtBQUssUUFBUSxFQUFFLENBQUM7UUFDMUIsTUFBTSxJQUFJLEtBQUssQ0FBQyxvQkFBb0IsQ0FB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