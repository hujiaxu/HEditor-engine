import { CameraEventType, KeyboardEventModifier } from '../../type';
import Scene from './Scene';
export default class ScreenSpaceCameraController {
    enableInputs: boolean;
    enableZoom: boolean;
    enableTranslate: boolean;
    enableRotate: boolean;
    enableTilt: boolean;
    enableLook: boolean;
    inertiaSpin: number;
    inertiaTranslate: number;
    inertiaZoom: number;
    maximumMovementRatio: number;
    minimumZoomDistance: number;
    maximumZoomDistance: number;
    translateEventTypes: CameraEventType;
    zoomEventTypes: CameraEventType[];
    rotateEventTypes: CameraEventType;
    tiltEventTypes: (CameraEventType | {
        eventType: CameraEventType;
        modifier: KeyboardEventModifier;
    })[];
    lookEventTypes: {
        eventType: CameraEventType;
        modifier: KeyboardEventModifier;
    };
    enableCollisionDetection: boolean;
    private _aggregator;
    private _lastInertiaSpinMovement;
    private _lastInertiaZoomMovement;
    private _lastInertiaTranslateMovement;
    private _lastInertiaTiltMovement;
    private _inertiaDisablers;
    private _tiltCenterMousePosition;
    private _tiltCenter;
    private _rotateMousePosition;
    private _rotateStartPosition;
    private _strafeStartPosition;
    private _strafeEndMousePosition;
    private _zoomMouseStart;
    private _zoomWorldPosition;
    private _useZoomWorldPosition;
    private _panLastMousePosition;
    private _panLastWorldPosition;
    private _looking;
    private _rotating;
    private _strafing;
    private _zoomingUnderground;
    private _zoomingOnVector;
    private _rotatingZoom;
    private _cameraUnderground;
    private _tiltOnEllipsoid;
    private _zoomFactor;
    private _rotateFactor;
    private _rotateRateRangeAdjustment;
    private _maximumRotateRate;
    private _minimumZoomRate;
    private _maximumZoomRate;
    private _minimumUndergroundPickDistance;
    private _maximumUndergroundPickDistance;
    private _ellipsoid;
    private _horizontalRotationAxis;
    private _scene;
    private _globe;
    private _minimumPickingTerrainHeight;
    minimumPickingTerrainHeight: number;
    minimumPickingTerrainDistanceWithInertia: number;
    minimumCollisionTerrainHeight: number;
    minimumTrackBallHeight: number;
    _adjustedHeightForTerrain: boolean;
    private _minimumCollisionTerrainHeight;
    private _lastGlobeHeight;
    constructor(scene: Scene);
    update(): void;
    private _reactToInput;
    private _activateInertia;
    private _maintainInertia;
    private _update3D;
    private _continueStrafing;
    private _strafe;
    private _spin3D;
    private _rotate3D;
    private _pan3D;
    private _zoom3D;
    private _handleZoom;
    private _tilt3D;
    private _tilt3DOnEllipsoid;
    private _tilt3DOnTerrain;
    private _look3D;
    private _adjustHeightForTerrain;
    private _pickPosition;
    private _getZoomDistanceUnderground;
    private _getDistanceFromSurface;
    private _getTiltCenterUnderground;
    private _getStrafeStartPositionUnderground;
}
